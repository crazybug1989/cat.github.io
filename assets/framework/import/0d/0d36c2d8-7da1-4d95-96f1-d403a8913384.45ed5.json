[1,0,0,[["cc.TextAsset",["_name","text"],1]],[[0,0,1,3]],[[0,"readme","# 帧动画系统\n\n## 使用方式\n\n---\n\n**需要有相应的JSON文件**  \n**JSON文件格式如下**  \n\n```js\n{\n    \"data\": [   // 数组，可以放多个动画数据，也可以没有data层，用loadAnimation加载\n        {\n            \"id\": 1,                // 动画ID，不可重复\n            \"resourceSheet\": \"\",    // 纹理PLIST纹理\n            \"groupCount\": 1,        // 每组动作包含几个动画数据，比如像8方向游戏，每个动作都有8个方向的数据那么该值就是8，注意这里并不是actionNames的数组长度\n            \"actionNames\": [\"idle\"],// 动作分组名字数组，可以用该数组的下标 * actionCount获取到动作数据\n            \"url\": \"revive\",        // 资源路径，该路径和帧url合并为资源加载路径，加载时会自动合并\n            \"actions\": [            // 动作数据，数量等于actionNames.length * actionCount\n                {\n                    \"id\": 1,            // 动作ID，不可重复\n                    \"interval\": 80,     // 动作播放的时间间隔，该值的优先级低于frame的duration（毫秒）\n                    \"frames\": [         // 帧数据\n                        {\n                            \"url\": \"alive_1\",   // 帧图片\n                            \"angle\": 10,        // 帧旋转\n                            \"offsetX\": 0,       // 帧偏移\n                            \"offsetY\": -60,     // 帧偏移\n                            \"isKey\": false,     // 关键帧\n                            \"playTimes\": 1,     // 帧重复播放次数\n                            \"duration\": 100,    // 帧持续时间，该数据优先级高于action的interval属性（毫秒）\n                        }\n                    ]\n                }\n            ]\n        },\n        ...\n    ]\n}\n\n/**\n * 动画数据【组】加载方式\n * @param jsonData  事先加载的动画数据\n */\nanimationLoader.instance.loadData(jsonData);\n\n/**\n * 动画数据【单个】加载方式\n * @param jsonData  事先加载的动画数据\n */\nanimationLoader.instance.loadAnimation(jsonData);\n\n/**\n * 资源加载方式\n * 务必使用以下方式加载\n */\nresLoader.instance.loadRes(...);\n// 或者直接加载所有加载节点，需要预先加入加载节点队列\nresLoader.instance.addNode(...);\nresLoader.instance.load(...);\n\n// 动画播放\n/**\n * 1、创建动画对象\n * @param parentNode    父节点，必传，不可为null\n * @param animId        动画ID，和JSON中对应，可选，默认为0，如果此处不传后面需要手动调用setAnimationData来设置数据属性\n * @param zIndex        z序列，用来设置动画节点在父容器中的层级\n */\nlet anim: animate = new animate(parentNode: cc.Node, animId?: number, zIndex?: number);\n/**\n * 2、播放动画\n * @param name          动作的名字\n * @param index         动作的子序号，比如像哪个方向的动作\n * @param loop          是否循环播放\n * @param completeCallBack  可选，动画最后一帧播放结束的时候的回调\n */\nanim.runAction(name: string, index: number, loop: boolean = true, completeCallBack?: () => void);\n/**\n * 3、也可以直接调用动作ID来播放\n * @param actionId      动作ID\n * @param loop          是否循环播放\n * @param completeCallBack  可选，动画最后一帧播放结束的时候的回调\n */\nanim.runActionByID(actionId: number, loop: boolean = true, completeCallBack: () => void);\n\n// 动画置空的方法\nanim.setAnimationData(0 || null || undefined);\n```"]],0,0,[],[],[]]